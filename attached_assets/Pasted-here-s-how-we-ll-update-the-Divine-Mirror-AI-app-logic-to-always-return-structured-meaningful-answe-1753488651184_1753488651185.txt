here’s how we’ll update the Divine Mirror AI app logic to always return structured, meaningful answers instead of just metadata fluff.

✅ New App Logic for Answer Handling
We’ll break this into clear, developer-ready steps. You can copy/paste or hand to Replit directly.

📍1. Update the Main Search Function
Replace your current response logic with this streamlined structure:

python
Copy
Edit
def process_user_query(query):
    results = semantic_search(query)

    if not results or len(results) == 0:
        return {
            "status": "no_results",
            "response": "No direct match found. Try rephrasing your question."
        }

    top_result = results[0]
    
    return {
        "status": "success",
        "response": format_full_response(top_result, query)
    }
🧠 2. Create the format_full_response() Function
This ensures every response includes:

🔹 Direct quote from sacred text

🔹 Simple AI summary of meaning

🔹 Cross-tradition parallels (if found)

🔹 Metadata (tradition, period, source)

python
Copy
Edit
def format_full_response(result, query):
    passage = result.get("text", "[No passage found]")
    metadata = result.get("metadata", {})

    response = f"""
📖 **Direct Quote**  
{passage.strip()}

🧠 **Interpretation**  
{generate_ai_interpretation(passage, query)}

🌍 **Tradition:** {metadata.get('tradition', 'Unknown')}  
📜 **Period:** {metadata.get('period', 'Unknown')}  
🔎 **Source:** {metadata.get('source', 'N/A')}
"""

    # Optional: add cross-tradition echo if available
    parallels = get_cross_tradition_parallels(query)
    if parallels:
        response += f"\n\n🔄 **Cross-Tradition Insight**\n{parallels}"

    return response
🔍 3. Semantic Search Function (ChromaDB + Embeddings)
Make sure this is your underlying logic:

python
Copy
Edit
def semantic_search(query):
    docs = chroma_db.similarity_search_with_score(query, k=3)
    return [
        {
            "text": doc.page_content,
            "metadata": doc.metadata
        } for doc, score in docs if score < 0.6
    ]
🔮 4. Cross-Tradition Matching (Optional but Powerful)
Here’s a stub function you can later train with a comparative DB:

python
Copy
Edit
def get_cross_tradition_parallels(query):
    # Placeholder: could later use keyword matching or embeddings
    parallels = {
        "kingdom of god": "Gospel of Thomas, Saying 3: 'The Kingdom is inside you and outside you...'",
        "forgiveness": "Tao Te Ching 62: 'The sage does not blame; he forgives all.'",
    }
    for keyword, value in parallels.items():
        if keyword in query.lower():
            return value
    return None
💡 Bonus: Add Tone Adaptation for Final Output
If you want each answer to sound like the app’s voice (Yeshua-style, calm and wise), we can tune the text-to-speech or embed a gentle narrative filter later.

✅ Recap: What This Fix Gives You
✔️ Direct quote from sacred texts
✔️ Concise explanation in plain language
✔️ Cross-tradition comparison (early Gnosticism, Taoism, etc.)
✔️ Fully structured output — not just metadata
✔️ No fallback to about-section fluff